df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
library(tidyverse)
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
library(lubridate)
df1
df1
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
df1
lapply(df1, class)
df3 <- df2 <- df1
View(df3)
write_delim(df1, "./file 1.tsv")
write_delim(df1, "./file 1.tsv")
write_delim(df2, "./file 2.tsv")
write_delim(df3, "./file 3.tsv")
Sys.glob()
Sys.glob("./*.tsv")
Sys.glob("./")
Sys.glob("./*")
dir("./*")
dir("./")
list.files("./")
help(cat)
cat("d,"g)
cat("d,"g"")
cat("d,"g")
cat("d","g")
test <- c(1,2,3)
test[-1]
readLines("./file 1.tsv")
cat(readLines("./file 1.tsv"), sep = "/n")
cat(readLines("./file 1.tsv"), sep = "\n")
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file=out_file, sep = "\n")
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
help(invisible)
read_check <- read.tsv("./test.tsv")
read_check <- read_tsv("./test.tsv")
View(read_check)
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file=out_file, sep = "\n")
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
read_check <- read_tsv("./test.tsv")
View(read_check)
file_paths
file_paths[-file_paths == out_file]
file_paths[-(file_paths == out_file)]
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
df3 <- df2 <- df1
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
file_paths <- file_paths[-file_paths == out_file]
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file=out_file, sep = "\n")
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
read_check <- read_tsv("./test.tsv")
help(cat)
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
df3 <- df2 <- df1
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
file_paths <- file_paths[-file_paths == out_file]
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
read_check <- read_tsv("./test.tsv")
View(read_check)
file_paths
file_paths <- file_paths[-file_paths == out_file]
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
file_paths <- file_paths[-(file_paths == out_file)]
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
read_check <- read_tsv("./test.tsv")
View(read_check)
file_paths
file_paths[-(file_paths == out_file)]
file_paths[-(file_paths == out_file)]
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
file_paths <- file_paths[-(file_paths == out_file)]
file_paths
file_paths == out_file
file_paths <- Sys.glob("./*.tsv")
file_paths
out_file <- "./test.tsv"
out_file
file_paths == out_file
-(file_paths == out_file)
file_paths[0]
file_paths[-1]
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
file_paths <- Sys.glob("./*.tsv")
write_tsv(df3, "./file 3.tsv")
file_paths <- file_paths[file_paths != out_file]
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
out_file <- "./test.tsv"
read_check <- read_tsv("./test.tsv")
View(read_check)
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
file_paths <- Sys.glob("./*.tsv")
out_file <- "./test.tsv"
file_paths <- file_paths[file_paths != out_file]
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
})
read_check <- read_tsv("./test.tsv")
View(read_check)
cat("b","a")
vv <- cat("b","a")
v
vv
sapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
return(lines)
})
lapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
return(read_tsv(file))
})
data_list <- lapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
return(read_tsv(file))
})
read_check <- read_tsv("./test.tsv")
data_list
as.data.frame(data_list)
rbind(data_list)
row_bind(data_list)
bind_rows(data_list)
do.call(rbind, data_list)
bind_rows
flatten_bindable
combined_data <- bind_rows(data_list)
identical(combined_data, read_check)
View(combined_data)
View(read_check)
View(combined_data)
class(read_check)
class(combined_data)
View(read_check)
View(combined_data)
View(read_check)
View(combined_data)
library(tidyverse)
library(lubridate)
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
df3 <- df2 <- df1
write_tsv(df1, "./file 1.tsv")
write_tsv(df2, "./file 2.tsv")
write_tsv(df3, "./file 3.tsv")
library(tidyverse)
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
library(lubridate)
df3 <- df2 <- df1
# Pretend we receive several separate text files
write_tsv(df1, "./combine multiple text files/file 1.tsv")
write_tsv(df2, "./combine multiple text files/file 2.tsv")
write_tsv(df3, "./combine multiple text files/file 3.tsv")
df1 <- data.frame(a = c(1,2,3,4,5), b = c("dsf df", "ddkk", "f, fds, ffff", "BB", NA), c = c(ymd("2019-07-08"), NA, ymd("2019-07-08"),NA,ymd("2019-07-09")))
df3 <- df2 <- df1
# Pretend we receive several separate text files
write_tsv(df1, "./combine multiple text files/file 1.tsv")
write_tsv(df2, "./combine multiple text files/file 2.tsv")
write_tsv(df3, "./combine multiple text files/file 3.tsv")
# Check all tsv files in work dir.
file_paths <- Sys.glob("./combine multiple text files/*.tsv")
out_file <- "./combine multiple text files/test.tsv"
file_paths <- file_paths[file_paths != out_file]
# Read each text file and concatenate into a bigger text file
# At the same time reading each of them into a dataframe
data_list <- lapply(file_paths, function(file){
lines <- readLines(file)
if(file == file_paths[1]){
cat(lines, file = out_file, sep = "\n", append = FALSE)
} else {
cat(lines[-1], file = out_file, sep = "\n", append = TRUE)
}
return(read_tsv(file))
})
# Row merge the list of dataframes into a big one
combined_data <- bind_rows(data_list)
# Test to see if reading from the combined file gives the same result as the combined_data df
read_check <- read_tsv("./combine multiple text files/test.tsv")
View(combined_data)
View(read_check)
